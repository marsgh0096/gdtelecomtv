name: Stock Monitor CI

on:
  workflow_dispatch: # 允许我们手动触发来测试
  schedule:
    # 使用Cron语法，设置为每5分钟运行一次
    - cron: '*/5 * * * *'

jobs:
  build:
    runs-on: ubuntu-latest # 使用最新的Ubuntu环境来运行

    steps:
      # 第1步: 检出(下载)你的仓库代码到运行环境中
      - name: Checkout repository
        uses: actions/checkout@v4

      # 第2步: 设置Python 3.9 环境
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'

      # 第3步: 安装 requirements.txt 中定义的Python库
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # 第4步: 运行你的监控脚本
      - name: Run Stock Monitor
        env: # 将我们设置的Secrets注入到脚本的环境变量中
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
        run: python stock_monitor.py
      
      # 第5步（新增）: 提交状态文件，以便“记忆”上次的运行结果
      - name: Commit state file
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git add notified_state.txt
          # 如果文件没有变化，git commit会失败，所以我们加上 || true 来忽略错误
          git commit -m "Update notification state" || true
          git push
